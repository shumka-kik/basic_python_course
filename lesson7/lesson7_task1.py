# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
# принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух
# матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
# с первым элементом первой строки второй матрицы и т.д.


class Matrix:
    def __init__(self, ls):
        self.my_list = ls

    def __str__(self):
        # создаем список строк, состоящих из значений строки матрицы чтобы потом построчно вывести результат
        inner_list = []
        for el in self.my_list:
            inner_str = ""
            for e in el:
                inner_str += f"{e} "
            inner_list.append(inner_str)

        result = "\n".join(inner_list)
        return f"{result}"

    def __add__(self, other):
        # список строк
        list_by_row = []
        for el1 in range(len(self.my_list)):
            # список одной строки
            list_by_line = []
            for el2 in range(len(self.my_list[0])):
                list_by_line.append(self.my_list[el1][el2] + other.my_list[el1][el2])
            # построчно добавляем СПИСОК со значениями
            list_by_row.append(list_by_line)

        return Matrix(list_by_row)


# 3*3
ma1 = Matrix([[1, 2, 3], [2, 3, 4], [3, 4, 5]])
ma2 = Matrix([[1, 2, 3], [2, 3, 4], [3, 4, 5]])
# 2*3
# ma1 = Matrix([[1, 2], [3, 4], [3, 5]])
# ma2 = Matrix([[1, 2], [3, 4], [3, 5]])

print(f"Первая матрица: \n{ma1}\n")
print(f"Вторая матрица: \n{ma2}\n")
print(f"Сумма матриц: \n{ma1 + ma2}")
