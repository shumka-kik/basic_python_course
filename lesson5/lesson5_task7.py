# Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме: название, форма собственности, 
# выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. Если фирма получила убытки, 
# в расчет средней прибыли ее не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью. 
# Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]

# Подсказка: использовать менеджеры контекста.


import json


try:
	with open("file_for_task7.txt", "r", encoding="utf-8") as f:
		summ = 0
		counter_profit = 0
		my_dict = {}
		
		for line in f:
			line = line.replace(".", "")
			value_list = line.split(" ")

			my_dict[value_list[0]] = float(value_list[2])

			# Если фирма прибыльная, то берем её показатели и добавляем её в счетчик успешных фирм.
			if float(value_list[2]) >= float(value_list[3]):
				counter_profit +=1
				summ += float(value_list[2])

		# сможем посчитать среднюю прибыль только после прогона по всем фирмам
		average_profit = summ / counter_profit
		result_list = [my_dict, {"average_profit": average_profit}]

		# запишем получившийся словарь в json файл
		with open("result_file_for_task7.json", "w", encoding="utf-8") as f:
			json.dump(result_list, f)

		print("Задача успешно выполнена!")
except IOError:
	print("Проблема ввода/вывода")
except ValueError:
	print("Проблема с конвертацией значений")